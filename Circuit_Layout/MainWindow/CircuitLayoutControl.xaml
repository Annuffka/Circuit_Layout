<UserControl x:Class="Circuit_Layout.CircuitLayoutControl"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Circuit_Layout" 
      xmlns:res="clr-namespace:Circuit_Layout.Properties"
      mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="800">
    <UserControl.Resources>
        <ItemsPanelTemplate x:Key="stp">
            <StackPanel/>
        </ItemsPanelTemplate>
        <ItemsPanelTemplate x:Key="canv">
            <Canvas/>
        </ItemsPanelTemplate>

        <Style TargetType="TextBlock" x:Key="ElementValuesData">
            <Setter Property="FontSize" Value="9"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="ElementNames">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <Style TargetType="ListBox" x:Key="LayoutTools">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#faffc7" />
            </Style.Resources>
        </Style>

        <DataTemplate DataType="{x:Type local:Node}">
            <Canvas MouseDown="Node_MouseDown">
                <Canvas.RenderTransform>
                    <TransformGroup>
                        <TranslateTransform X="-5" Y="-5"/>
                        <TranslateTransform X="{Binding X}" Y="{Binding Y}"/>
                    </TransformGroup>
                </Canvas.RenderTransform>
                <Ellipse Width="10" Height="10" Fill="#014d9a" Stroke="Lime" StrokeThickness="{Binding StrokeThickness}"/>
                <TextBlock Foreground="#014d9a" Text="{Binding Number}" Margin="-5 -12 0 0"/>
            </Canvas>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:Connector}">
            <Grid ContextMenuOpening="ContextMenu_ContextMenuOpening" ContextMenuClosing="ContextMenu_ContextMenuClosing">
                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Click="ContextMenu_Remove" Header="{x:Static res:Resources.cc_connector_cm_remove}"/>
                    </ContextMenu>
                </Grid.ContextMenu>
                <Line X1="{Binding NodeA.X}" Y1="{Binding NodeA.Y}" X2="{Binding NodeB.X}" Y2="{Binding NodeB.Y}" Stroke="Black" StrokeThickness="2"/>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:NoDrawConnector}">
        </DataTemplate>

        <ContextMenu x:Key="ElementContextMenu">
            <MenuItem Header="{x:Static res:Resources.cc_cm_edit}" Click="ContextMenu_Edit">
                <MenuItem.Icon>
                    <Image Width="15" Height="15" Source="../Resources/edit.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="{x:Static res:Resources.cc_cm_remove}" Click="ContextMenu_Remove">
                <MenuItem.Icon>
                    <Image Width="15" Height="15" Source="../Resources/close.png"/>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

        <DataTemplate DataType="{x:Type local:Resistor}">
            <Canvas>
                <Grid Background="Transparent" Width="40" Height="40" ContextMenu="{StaticResource ElementContextMenu}" MouseDown="Element_MouseDown" ContextMenuOpening="ContextMenu_ContextMenuOpening" ContextMenuClosing="ContextMenu_ContextMenuClosing">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="-20" Y="-20"/>
                            <RotateTransform Angle="{Binding Angle}"/>
                            <TranslateTransform X="{Binding X}" Y="{Binding Y}"/>
                        </TransformGroup>
                    </Grid.RenderTransform>
                    <Line X1="0" Y1="20" X2="5" Y2="20" Stroke="Black" StrokeThickness="2"/>
                    <Rectangle Width="32" Height="16" Stroke="Black" StrokeThickness="2" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <Line X1="35" Y1="20" X2="40" Y2="20" Stroke="Black" StrokeThickness="2"/>
                </Grid>
                <StackPanel>
                    <StackPanel.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="-25" Y="15"/>
                            <TranslateTransform X="{Binding X}" Y="{Binding Y}"/>
                        </TransformGroup>
                    </StackPanel.RenderTransform>
                    <TextBlock Text="{Binding Name}" Style="{StaticResource ElementNames}"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="R=" Style="{StaticResource ElementValuesData}"/>
                        <Grid>
                            <TextBlock Text="{Binding Resistance}" Style="{StaticResource ElementValuesData}"/>
                            <TextBox Width="50" Visibility="{Binding EditPartVisibility}" Text="{Binding Resistance}" VerticalAlignment="Center" FontSize="10" IsEnabled="{Binding IsChecked,ElementName=cbRun}" KeyDown="ResistanceTextBox_KeyDown" LostFocus="ResistanceTextBox_LostFocus" />
                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding VoltageVisibility}">
                        <TextBlock Text="U=" Style="{StaticResource ElementValuesData}"/>
                        <TextBlock Text="{Binding Voltage}" Style="{StaticResource ElementValuesData}"/>
                    </StackPanel>
                </StackPanel>
            </Canvas>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:ResistorX}">
            <Canvas>
                <Grid Background="Transparent" Width="40" Height="40" ContextMenu="{StaticResource ElementContextMenu}" MouseDown="Element_MouseDown" ContextMenuOpening="ContextMenu_ContextMenuOpening" ContextMenuClosing="ContextMenu_ContextMenuClosing">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="-20" Y="-20"/>
                            <RotateTransform Angle="{Binding Angle}"/>
                            <TranslateTransform X="{Binding X}" Y="{Binding Y}"/>
                        </TransformGroup>
                    </Grid.RenderTransform>
                    <Line X1="0" Y1="20" X2="5" Y2="20" Stroke="Black" StrokeThickness="2"/>
                    <Rectangle Width="32" Height="16" Stroke="Black" StrokeThickness="2" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <Line X1="35" Y1="20" X2="40" Y2="20" Stroke="Black" StrokeThickness="2"/>
                </Grid>
                <StackPanel Orientation="Horizontal">
                    <StackPanel.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="-20" Y="-25"/>
                            <RotateTransform Angle="{Binding Angle}"/>
                            <TranslateTransform X="{Binding X}" Y="{Binding Y}"/>
                        </TransformGroup>
                    </StackPanel.RenderTransform>
                    <TextBlock Text="{Binding Name}" Style="{StaticResource ElementNames}"/>
                </StackPanel>
            </Canvas>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:Reohord}">
            <Canvas>
                <Grid Background="Transparent" Width="200" Height="40" MouseDown="Element_MouseDown" ContextMenu="{StaticResource ElementContextMenu}" ContextMenuOpening="ContextMenu_ContextMenuOpening" ContextMenuClosing="ContextMenu_ContextMenuClosing">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="-100" Y="-33"/>
                            <RotateTransform Angle="{Binding Angle}"/>
                            <TranslateTransform X="{Binding X}" Y="{Binding Y}"/>
                        </TransformGroup>
                    </Grid.RenderTransform>
                    <Line X1="0" Y1="33" X2="20" Y2="33" Stroke="Black" StrokeThickness="2"/>
                    <Rectangle Width="160" Height="10" Stroke="Black" StrokeThickness="2">
                        <Rectangle.RenderTransform>
                            <TranslateTransform X="0" Y="12"/>
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <Slider Width="160" Height="10" Value="50" Minimum="1" ValueChanged="ReohordSlider_ValueChanged" Maximum="99" IsEnabled="{Binding IsChecked, ElementName=cbRun}">
                        <Slider.RenderTransform>
                            <TranslateTransform X="0" Y="11"/>
                        </Slider.RenderTransform>
                    </Slider>
                    <Line X1="180" Y1="33" X2="200" Y2="33" Stroke="Black" StrokeThickness="2"/>
                    <Line X1="100" Y1="0" X2="100" Y2="25" Stroke="Black" StrokeThickness="2" />
                    <Line X1="96" Y1="19" X2="100" Y2="25" Stroke="Black" StrokeThickness="2" />
                    <Line X1="104" Y1="19" X2="100" Y2="25" Stroke="Black" StrokeThickness="2" />
                </Grid>
                <StackPanel>
                    <StackPanel.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="-25" Y="15"/>
                            <TranslateTransform X="{Binding X}" Y="{Binding Y}"/>
                        </TransformGroup>
                    </StackPanel.RenderTransform>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name}" Style="{StaticResource ElementNames}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Rmax=" Style="{StaticResource ElementValuesData}"/>
                        <TextBlock Text="{Binding Resistance}" Style="{StaticResource ElementValuesData}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding LengthVisibility}">
                        <TextBlock Text="AC=" Style="{StaticResource ElementValuesData}"/>
                        <TextBlock Text="{Binding LengthAC}" Style="{StaticResource ElementValuesData}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding LengthVisibility}">
                        <TextBlock Text="BC=" Style="{StaticResource ElementValuesData}"/>
                        <TextBlock Text="{Binding LengthBC}" Style="{StaticResource ElementValuesData}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding ResistanceVisibility}">
                        <TextBlock Text="Rac=" Style="{StaticResource ElementValuesData}"/>
                        <TextBlock Text="{Binding ResistorAC.Resistance}" Style="{StaticResource ElementValuesData}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding ResistanceVisibility}">
                        <TextBlock Text="Rbc=" Style="{StaticResource ElementValuesData}"/>
                        <TextBlock Text="{Binding ResistorBC.Resistance}" Style="{StaticResource ElementValuesData}"/>
                    </StackPanel>
                </StackPanel>
            </Canvas>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:Battery}">
            <Canvas>
                <Grid Height="40" Width="40" Background="Transparent" MouseDown="Element_MouseDown" ContextMenu="{StaticResource ElementContextMenu}" ContextMenuOpening="ContextMenu_ContextMenuOpening" ContextMenuClosing="ContextMenu_ContextMenuClosing">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="-20" Y="-20"/>
                            <RotateTransform Angle="{Binding Angle}"/>
                            <TranslateTransform X="{Binding X}" Y="{Binding Y}"/>
                        </TransformGroup>
                    </Grid.RenderTransform>
                    <Line X1="15" Y1="20" X2="0" Y2="20" Stroke="Black" StrokeThickness="2"/>
                    <Line X1="15" Y1="35" X2="15" Y2="5" Stroke="Black" StrokeThickness="4"/>
                    <Line X1="23" Y1="15" X2="23" Y2="25" Stroke="Black" StrokeThickness="4"/>
                    <Line X1="23" Y1="20" X2="40" Y2="20" Stroke="Black" StrokeThickness="2"/>
                </Grid>
                <StackPanel>
                    <StackPanel.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="-25" Y="15"/>
                            <TranslateTransform X="{Binding X}" Y="{Binding Y}"/>
                        </TransformGroup>
                    </StackPanel.RenderTransform>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name}" Style="{StaticResource ElementNames}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="EDS=" Style="{StaticResource ElementValuesData}"/>
                        <TextBlock Text="{Binding Eds}" Style="{StaticResource ElementValuesData}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="R=" Style="{StaticResource ElementValuesData}"/>
                        <TextBlock Text="{Binding Resistance}" Style="{StaticResource ElementValuesData}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding VoltageVisibility}">
                        <TextBlock Text="U=" Style="{StaticResource ElementValuesData}"/>
                        <TextBlock Text="{Binding Voltage}" Style="{StaticResource ElementValuesData}"/>
                    </StackPanel>
                </StackPanel>
            </Canvas>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:Amperemeter}">
            <Grid Width="80" Height="80" Background="Transparent" MouseDown="Element_MouseDown" ContextMenu="{StaticResource ElementContextMenu}" ContextMenuOpening="ContextMenu_ContextMenuOpening" ContextMenuClosing="ContextMenu_ContextMenuClosing">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <TranslateTransform X="-40" Y="-40"/>
                        <TranslateTransform X="{Binding X}" Y="{Binding Y}"/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <Canvas>
                    <Canvas.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="-40" Y="-40"/>
                            <RotateTransform Angle="{Binding Angle}"/>
                            <TranslateTransform X="40" Y="40"/>
                        </TransformGroup>
                    </Canvas.RenderTransform>
                    <TextBlock Text="-">
                        <TextBlock.RenderTransform>
                            <TranslateTransform X="3" Y="20"/>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                    <Line X1="0" Y1="40" X2="10" Y2="40" Stroke="Black" StrokeThickness="2"/>
                    <TextBlock Text="+">
                        <TextBlock.RenderTransform>
                            <TranslateTransform X="72" Y="20"/>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                    <Line X1="70" Y1="40" X2="80" Y2="40" Stroke="Black" StrokeThickness="2"/>
                </Canvas>
                <Grid>
                    <Line X1="40" Y1="12" X2="40" Y2="22" Stroke="Red" StrokeThickness="1"/>
                    <Line X1="40" Y1="12" X2="40" Y2="17" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="10"/>
                        </Line.RenderTransform>
                    </Line>
                    <Line X1="40" Y1="12" X2="40" Y2="17" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="-10"/>
                        </Line.RenderTransform>
                    </Line>
                    <Line X1="40" Y1="12" X2="40" Y2="17" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="20"/>
                        </Line.RenderTransform>
                    </Line>
                    <Line X1="40" Y1="12" X2="40" Y2="17" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="-20"/>
                        </Line.RenderTransform>
                    </Line>
                    <Line X1="40" Y1="12" X2="40" Y2="17" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="30"/>
                        </Line.RenderTransform>
                    </Line>
                    <Line X1="40" Y1="12" X2="40" Y2="17" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="-30"/>
                        </Line.RenderTransform>
                    </Line>
                    <Line X1="40" Y1="12" X2="40" Y2="17" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="40"/>
                        </Line.RenderTransform>
                    </Line>
                    <Line X1="40" Y1="12" X2="40" Y2="17" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="-40"/>
                        </Line.RenderTransform>
                    </Line>
                    <Line X1="40" Y1="12" X2="40" Y2="22" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="50"/>
                        </Line.RenderTransform>
                    </Line>
                    <Line X1="40" Y1="12" X2="40" Y2="22" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="-50"/>
                        </Line.RenderTransform>
                    </Line>
                    <Line X1="40" Y1="12" X2="40" Y2="17" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="60"/>
                        </Line.RenderTransform>
                    </Line>
                    <Line X1="40" Y1="12" X2="40" Y2="17" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="-60"/>
                        </Line.RenderTransform>
                    </Line>
                    <Line X1="40" Y1="12" X2="40" Y2="17" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="70"/>
                        </Line.RenderTransform>
                    </Line>
                    <Line X1="40" Y1="12" X2="40" Y2="17" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="-70"/>
                        </Line.RenderTransform>
                    </Line>
                    <Line X1="40" Y1="12" X2="40" Y2="17" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="80"/>
                        </Line.RenderTransform>
                    </Line>
                    <Line X1="40" Y1="12" X2="40" Y2="17" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="-80"/>
                        </Line.RenderTransform>
                    </Line>
                    <Line X1="40" Y1="12" X2="40" Y2="17" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="90"/>
                        </Line.RenderTransform>
                    </Line>
                    <Line X1="40" Y1="12" X2="40" Y2="17" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="-90"/>
                        </Line.RenderTransform>
                    </Line>
                    <Line X1="40" Y1="12" X2="40" Y2="22" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="100"/>
                        </Line.RenderTransform>
                    </Line>
                    <Line X1="40" Y1="12" X2="40" Y2="22" Stroke="Red" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                        <Line.RenderTransform>
                            <RotateTransform Angle="-100"/>
                        </Line.RenderTransform>
                    </Line>

                    <!--<TextBlock Text="{Binding Divisions[0]}" FontSize="8" Margin="20 40 0 0"/>
                    <TextBlock Text="{Binding Divisions[1]}" FontSize="8" Margin="22 25 0 0"/>-->
                    <TextBlock Text="{Binding Divisions[2]}" FontSize="8" HorizontalAlignment="Center" Margin="0 20 0 0"/>
                    <!--<TextBlock Text="{Binding Divisions[3]}" FontSize="8" HorizontalAlignment="Right" Margin="0 25 25 0"/>
                    <TextBlock Text="{Binding Divisions[4]}" FontSize="8" HorizontalAlignment="Right" Margin="0 40 22 0"/>-->
                </Grid>

                <Line X1="40" Y1="40" X2="40" Y2="15" Stroke="Blue" StrokeThickness="1" RenderTransformOrigin=".5 .5">
                    <Line.RenderTransform>
                        <RotateTransform Angle="{Binding ArrowAngle}"/>
                    </Line.RenderTransform>
                </Line>

                <Ellipse Width="60" Height="60" Stroke="Black" StrokeThickness="2" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                <TextBlock Text="{Binding Name}" Style="{StaticResource ElementNames}" HorizontalAlignment="Center" Margin="0 50 0 0">
                </TextBlock>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:Potentiometer}">
            <Canvas>
                <Grid Background="Transparent" Width="200" Height="40" MouseDown="Element_MouseDown" ContextMenu="{StaticResource ElementContextMenu}" ContextMenuOpening="ContextMenu_ContextMenuOpening" ContextMenuClosing="ContextMenu_ContextMenuClosing">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="-100" Y="-33"/>
                            <RotateTransform Angle="{Binding Angle}"/>
                            <TranslateTransform X="{Binding X}" Y="{Binding Y}"/>
                        </TransformGroup>
                    </Grid.RenderTransform>
                    <Line X1="0" Y1="33" X2="20" Y2="33" Stroke="Black" StrokeThickness="2"/>
                    <Rectangle Width="160" Height="10" Stroke="Black" StrokeThickness="2">
                        <Rectangle.RenderTransform>
                            <TranslateTransform X="0" Y="12"/>
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <Slider Width="160" Height="10" Value="50" Minimum="0" ValueChanged="PotentiometerSlider_ValueChanged" Maximum="99" IsEnabled="{Binding IsChecked, ElementName=cbRun}">
                        <Slider.RenderTransform>
                            <TranslateTransform X="0" Y="11"/>
                        </Slider.RenderTransform>
                    </Slider>

                    <Line X1="100" Y1="10" X2="100" Y2="25" Stroke="Black" StrokeThickness="2" />
                    <Line X1="100" Y1="10" X2="200" Y2="10" Stroke="Black" StrokeThickness="2" />
                    <Line X1="200" Y1="10" X2="200" Y2="35" Stroke="Black" StrokeThickness="2" />
                    <Line X1="96" Y1="19" X2="100" Y2="25" Stroke="Black" StrokeThickness="2" />
                    <Line X1="104" Y1="19" X2="100" Y2="25" Stroke="Black" StrokeThickness="2" />
                </Grid>
                <StackPanel>
                    <StackPanel.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="-25" Y="15"/>
                            <TranslateTransform X="{Binding X}" Y="{Binding Y}"/>
                        </TransformGroup>
                    </StackPanel.RenderTransform>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                        <TextBlock Text="{Binding Name}" Style="{StaticResource ElementNames}"/>
                        <TextBlock Text="; Rmax=" Style="{StaticResource ElementValuesData}"/>
                        <TextBlock Text="{Binding MaxResistance}" Style="{StaticResource ElementValuesData}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="R=" Style="{StaticResource ElementValuesData}"/>
                        <TextBlock Text="{Binding Resistance}" Style="{StaticResource ElementValuesData}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding VoltageVisibility}">
                        <TextBlock Text="U=" Style="{StaticResource ElementValuesData}"/>
                        <TextBlock Text="{Binding Voltage}" Style="{StaticResource ElementValuesData}"/>
                    </StackPanel>
                </StackPanel>
            </Canvas>
        </DataTemplate>
    </UserControl.Resources>
    <DockPanel>
        <StackPanel DockPanel.Dock="Top" Background="#9acf5c" Margin="-5 0 -5 5">
            <CheckBox Name="cbRun" IsChecked="False" Visibility="Collapsed" VerticalAlignment="Center" Checked="cbRun_Checked" Unchecked="cbRun_Checked"/>
            <Button Content="{x:Static res:Resources.cc_cb_run}" Name="btnRun" Click="ButtonRUN_Click" Width="150" Padding="5 2 5 2"/>
        </StackPanel>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*" MinWidth="400"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Grid Name="grElements" Background="#9acf5c" Margin="-5 0 -5 0">
                <ListBox Background="#c4e48b" Name="lbElements" VerticalAlignment="Top" Style="{StaticResource LayoutTools}">
                    <ListBoxItem IsSelected="True">
                        <Image Source="../Resources/Elements/R.png" Width="50" Height="50"/>
                    </ListBoxItem>
                    <ListBoxItem>
                        <Image Source="../Resources/Elements/Gb.png" Width="50" Height="50"/>
                    </ListBoxItem>
                    <ListBoxItem>
                        <Image Source="../Resources/Elements/mA.png" Width="50" Height="50"/>
                    </ListBoxItem>
                    <ListBoxItem>
                        <Image Source="../Resources/Elements/reohord.png" Width="50" Height="50"/>
                    </ListBoxItem>
                    <ListBoxItem>
                        <Image Source="../Resources/Elements/Rx.png" Width="50" Height="50"/>
                    </ListBoxItem>
                    <ListBoxItem>
                        <Image Source="../Resources/Elements/potenchiometr.png" Width="50" Height="50"/>
                    </ListBoxItem>
                </ListBox>
            </Grid>
            <Border Grid.Column="1" BorderBrush="#faffc7" BorderThickness="2" Margin="2">
                <!--<ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">-->
                    <Viewbox Name="vbLayout" Stretch="UniformToFill">
                        <Canvas Background="#faffc7" Name="icLayout" MouseDown="Layout_MouseDown" Width="500" Height="370" MouseMove="Layout_MouseMove">
                            <ItemsControl ItemsSource="{Binding ConnectorsToDraw}" ItemsPanel="{StaticResource canv}"/>
                            <ItemsControl ItemsSource="{Binding Nodes}" ItemsPanel="{StaticResource canv}"/>
                        </Canvas>
                    </Viewbox>
                <!--</ScrollViewer>-->
            </Border>
            <Grid Name="brCountData" Grid.Column="2" Visibility="Collapsed">
                <Border BorderBrush="#faffc7" BorderThickness="2" Margin="2" Width="300" Visibility="{Binding DisplayMatrix}">

                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <Border Background="#faffc7" Padding="5">
                            <StackPanel>
                                <TextBlock Text="{x:Static res:Resources.cc_cd_chains}" Margin="0 20 0 5"/>
                                <ItemsControl Name="icChains" ItemsSource="{Binding Chains}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="I"/>
                                                <TextBlock Text="{Binding Number}"/>
                                                <TextBlock Text=":" Margin="0 0 5 0"/>
                                                <TextBlock Text="{Binding Text}" Foreground="#014d9a"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>

                                <TextBlock Text="{x:Static res:Resources.cc_cd_contours}" Margin="0 20 0 5"/>
                                <ItemsControl Name="icContours" ItemsSource="{Binding Contours}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Text}" Foreground="#014d9a"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>

                                <StackPanel Orientation="Horizontal" Margin="0 20 0 5">
                                    <TextBlock Text="{x:Static res:Resources.cc_cd_rule1count}" Margin="0 0 5 0"/>
                                    <TextBlock Text="{Binding Rule1Count}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0 0 0 5">
                                    <TextBlock Text="{x:Static res:Resources.cc_cd_rule2count}" Margin="0 0 5 0"/>
                                    <TextBlock Text="{Binding Rule2Count}"/>
                                </StackPanel>
                                <TextBlock Text="{x:Static res:Resources.cc_cd_equations}" Margin="0 20 0 5"/>
                                <ItemsControl ItemsSource="{Binding Quations}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>

                            </StackPanel>
                        </Border>
                    </ScrollViewer>
                </Border>
            </Grid>
        </Grid>
    </DockPanel>
</UserControl>
